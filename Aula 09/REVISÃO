-- AULA 28/10
-- REVISÃO

GO;
CREATE DATABASE VENDA;
GO;
USE VENDA;
GO;

CREATE TABLE PRODUTOS
(
	ID INT PRIMARY KEY,
	NOME VARCHAR(50),
	CATEGORIA VARCHAR(25),
	PRECO DECIMAL(5,2) CHECK (PRECO >= 0)
);

CREATE TABLE INVENTARIO
(
	ID INT PRIMARY KEY IDENTITY(10,10), -- PRIMEIRO VALOR SERÁ 10, O SEGUNDO 20, O TERCEIRO 30... ESTÁ INDO DE 10 EM 10
	FK_ID_PRODUTO INT,
	QUANTIDADE INT,
	MINLEVEL INT,
	MAXLEVEL INT,
	CONSTRAINT FK_INVENTARIO_PRODUTO
		FOREIGN KEY (FK_ID_PRODUTO)
		REFERENCES PRODUTOS (ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE VENDA
(
	ID INT PRIMARY KEY IDENTITY, 
	FK_ID_PRODUTO INT,
	QUANTIDADE INT,
	VALOR DECIMAL(10,2)
);

ALTER TABLE VENDA 
ADD CONSTRAINT FK_VENDA_PRODUTO
FOREIGN KEY (FK_ID_PRODUTO)
REFERENCES PRODUTOS (ID)
ON DELETE CASCADE
ON UPDATE CASCADE

INSERT INTO PRODUTOS 
VALUES ('123', 'COCA-COLA KS', 'BEBIDA', 5.00),
	   ('111', 'COCA-COLA LATA', 'BEBIDA', 4.00),
	   ('112', 'COCA-COLALATA 0', 'BEBIDA', 5.00),
	   ('687', 'SPATEN 473ML', 'BEBIDA', 7.00),
	   ('666', 'BELINHA', 'BEBIDA', 2.00),
	   ('668', 'COROTE', 'BEBIDA', 3.00 ),
	   ('777', 'ENERGÉTICO', 'BEBIDA', 9.00 ),
	   ('999', 'JOÃO ANDARILHO', 'BEBIDA', 550 );

SELECT * FROM PRODUTOS;

INSERT INTO INVENTARIO (FK_ID_PRODUTO, QUANTIDADE, MINLEVEL, MAXLEVEL)
VALUES (123, 100, 30, 200),
	   (111, 200, 50, 500),
	   (112, 200, 50, 500),
	   (687, 1000, 500, 2000),
	   (666, 5, 2, 10),
	   (668, 15, 5, 20),
	   (777, 50, 30, 100),
	   (999, 20, 10, 25);
	 
-- VERIFICANDO RESTRIÇÃO CHECK
INSERT INTO PRODUTOS 
VALUES ('188', 'COCA-COLA 2L', 'BEBIDA', -15.00)

SELECT
	P.ID,
	P.NOME,
	P.PRECO,
	I.QUANTIDADE,
	I.MINLEVEL,
	I.MAXLEVEL
FROM INVENTARIO AS I
	JOIN PRODUTOS AS P
	ON I.FK_ID_PRODUTO = P.ID;

-- MODIFICAR UM PRODUTO ESPECÍFICO
UPDATE PRODUTOS 
SET ID = 000
WHERE ID = 666;

SELECT * FROM INVENTARIO;

-- APAGAR UM PRODUTO ESPECÍFICO
DELETE FROM PRODUTOS
WHERE ID = 0000;

INSERT INTO PRODUTOS 
VALUES ('666', 'BELINHA', 'BEBIDA', 2.00)

INSERT INTO INVENTARIO 
VALUES (666, 5, 2, 10)


-- REVISÃO TRIGGER

	-- PRÁTICA 1: VENDER UMA QUANTIDADE MAIOR QUE EU POSSUO NO ESTOQUE
	GO
	CREATE OR ALTER TRIGGER TRG_QUANTIDADE
	ON VENDA 
	AFTER INSERT 
	AS
	BEGIN
		DECLARE @QTD_VENDIDA INT,
				@ID_PRODUTO INT,
				@QTD_INVENTARIO INT;

		-- INFORMAÇÃO DO COMANDO INSERT
		SELECT @ID_PRODUTO = I.FK_ID_PRODUTO, @QTD_VENDIDA = I.QUANTIDADE
		FROM INSERTED AS I;

		--RECUPERAR INFORMAÇÕES DA TABELA INVENTARIO
		SELECT @QTD_INVENTARIO = I.QUANTIDADE
		FROM INVENTARIO AS I
		WHERE I.FK_ID_PRODUTO = @ID_PRODUTO

		IF @QTD_VENDIDA > @QTD_INVENTARIO
		BEGIN
			RAISERROR('NÃO HA PRODUTOS EM ESTOQUE SUFICIENTES PARA ESTA VENDA!', 16, 1);
			ROLLBACK TRANSACTION;
		END

		ELSE
		BEGIN
			UPDATE INVENTARIO
			SET QUANTIDADE = QUANTIDADE - @QTD_VENDIDA
			WHERE FK_ID_PRODUTO = @ID_PRODUTO
			PRINT('VENDA REALIZADA COM SUCESSO!');
		END

	END;
	GO

	SELECT * FROM VENDA;

	INSERT INTO VENDA 
	VALUES (666, 1, NULL);

	INSERT INTO VENDA 
	VALUES (999, 2, NULL);

	INSERT INTO VENDA 
	VALUES (123, 110, NULL);

	SELECT
		P.ID,
		P.NOME,
		P.PRECO,
		I.QUANTIDADE,
		I.MINLEVEL,
		I.MAXLEVEL
	FROM INVENTARIO AS I
		JOIN PRODUTOS AS P
		ON I.FK_ID_PRODUTO = P.ID;

	-- PRÁTICA 2: CALCULAR VALOR VENDA
	GO
	CREATE OR ALTER PROCEDURE USP_VALOR (@ID_PRODUTO INT, @QUANTIDADE INT)
	AS
	BEGIN
	DECLARE @VALOR DECIMAL(10,2),
			@PRECO DECIMAL(10,2);

	SELECT @PRECO = P.PRECO
	FROM PRODUTOS AS P
	WHERE P.ID =  @ID_PRODUTO;

	SET @VALOR = @PRECO * @QUANTIDADE;

	INSERT INTO VENDA
	VALUES (@ID_PRODUTO, @QUANTIDADE, @VALOR)
	END

	EXEC USP_VALOR @ID_PRODUTO = 123, @QUANTIDADE = 90;

	SELECT * FROM VENDA;

	-- PRÁTICA 3: LOG. ALTERAÇÃO TABELA PROD. (DESAFIO)

-- GERENCIAMENTO DE USUÁRIOS 
GO
USE [master]
GO
CREATE LOGIN [Juca] WITH PASSWORD=N'12345', DEFAULT_DATABASE=[BIBLIOTECA], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO
use [master];
GO
USE [BIBLIOTECA]
GO
CREATE USER [Juca] FOR LOGIN [Juca]
GO
USE [BIBLIOTECA]
GO
ALTER ROLE [db_datareader] ADD MEMBER [Juca]
GO

-- DAR PERMISSÃO PARA EDITAR O BANCO 
USE BIBLIOTECA;
GRANT INSERT ON [DBO].[AUTOR] TO JUCA;

-- NEGAR A PERMISSÃO PARA EDITAR O BANCO (SUPERIOR AO GRANT)
DENY SELECT ON [DBO].[EDITORA] TO JUCA;

-- ANULAR UM GRANT OU DENY (NO CASO ANULA O DENY POR SER SUPERIOR AO GRANT, ACABA ANULANDO A ÚLTIMA LINHA REALIZADA)
REVOKE SELECT ON [DBO].[EDITORA] TO JUCA;
