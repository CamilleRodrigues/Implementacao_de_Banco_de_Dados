-- AULA 07/10

-- CASE 

SELECT F.Pnome AS 'NOME', F.Salario AS 'SALÁRIO',
	CASE 
		WHEN F.Salario < 20000 THEN 'BAIXO'
		WHEN F.Salario BETWEEN 20000 AND 40000 THEN 'MÉDIO'
		WHEN F.Salario > 40000 THEN 'ALTO'
		ELSE 'INVÁLIDO'
	END AS 'STATUS'
FROM FUNCIONARIO AS F ORDER BY F.Salario ASC;

-- TRANSACTION

BEGIN TRANSACTION;

DECLARE @Erro INT = 0;

UPDATE FUNCIONARIO
SET Datanasc = '1988-01-19'
SET @Erro = @@ROWCOUNT;

SELECT * FROM FUNCIONARIO ORDER BY Pnome ASC;

IF @Erro <> 1
	ROLLBACK TRANSACTION;
ELSE
	COMMIT TRANSACTION;

-- SIMULAÇÃO

-- Transação 1: Definido nível de isolamento para SERIALIZABLE
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
BEGIN TRAN;
SELECT * FROM FUNCIONARIO
PRINT 'SELECT CONCLUÍDO EM: ' + CONVERT(VARCHAR(30), SYSDATETIME(), 121);

-- Mantém a transação aberta por 20 segundos
WAITFOR DELAY '00:00:20'
PRINT 'TRANSACTION FINALIZADA EM: ' + CONVERT(VARCHAR(30), SYSDATETIME(), 121);

COMMIT TRAN;

-- Transação 2
BEGIN TRAN;

INSERT INTO FUNCIONARIO (Pnome, Unome, Cpf)
VALUES ('Gertulino', 'Da Silva', '9999999')
PRINT 'INSERT FINALIZADA EM: ' + CONVERT(VARCHAR(30), SYSDATETIME(), 121);

COMMIT TRAN;

-- TRANSACTION + SAVE POINT

BEGIN TRAN;
INSERT INTO DEPARTAMENTO (Dnumero, Dnome)
VALUES (81, 'TesteA');

-- Marca um ponto de retorno
SAVE TRAN P1;

-- Segundo INSERT que será desfeito 
INSERT INTO DEPARTAMENTO (Dnumero, Dnome)
VALUES (82, 'TesteB');

-- Confirmar
SELECT * FROM DEPARTAMENTO;

ROLLBACK TRAN P1 -- TesteB não irá aparecer

COMMIT;

-- Confirmação Estado Final
SELECT * FROM DEPARTAMENTO;

-- TRY CATCH

BEGIN TRY
	SELECT 1/0;
	PRINT 'Não cheguei aqui'
END TRY
BEGIN CATCH
		PRINT 'Deu erro';
		PRINT 'Número: ' + CAST(ERROR_NUMBER() AS VARCHAR(20));
		PRINT 'Mensagem: ' + ERROR_MESSAGE()
END CATCH
