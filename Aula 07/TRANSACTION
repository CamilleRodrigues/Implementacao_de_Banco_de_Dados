
BANCO EMPRESA

-- TRANSACTION (AULA 30/09)

-- Exercício 1: Crie uma transação para realizar duas inserções dentro de uma transação: uma na tabela
-- FUNCIONARIO e outra na tabela DEPARTAMENTO. Se a segunda inserção falhar, a primeira será
-- revertida.

-- CRIA UMA TRANSAÇÃO
BEGIN TRANSACTION;

-- VARIÁVEL PARA ARMAZENAR ERROS
DECLARE @Erro INT;

-- INSERE UM NOVO FUNCIONÁRIO
INSERT INTO FUNCIONARIO (Pnome, Unome, Cpf)
VALUES ('Gertulino', 'Da Silva', '9999999')
SET @Erro = @@ERROR;

SELECT * 
FROM FUNCIONARIO;

-- INSERE UM NOVO DEPARTAMENTO
INSERT INTO DEPARTAMENTO (Dnome, Dnumero)
VALUES ('Matriz', 1);
SET @Erro = @Erro + @@ERROR

-- SELECT * 
-- FROM DEPARTAMENTO;

-- SE HOUVER ERRO
IF @Erro <> 0
	BEGIN
		ROLLBACK TRANSACTION;
		PRINT 'Erro detectado, Transação revertida.'
	END

ELSE
	BEGIN
		COMMIT TRANSACTION;
		PRINT 'Transação concluída com sucesso.'
	END

-- Exercício 2: Crie uma transação que atualize o salário de todos os funcionários de um determinado departamento.
-- Se a atualização de qualquer funcionário falhar, reverta todas as alterações.

-- CRIA UMA TRANSAÇÃO
BEGIN TRANSACTION;

-- VARIÁVEL PARA ARMAZENAR ERROS
DECLARE @QuantidadeFuncionario INT;
DECLARE @Departamento INT = 5;
DECLARE @Erro1 INT;

-- CONTA QUANTOS FUNCIONÁRIOS TEM POR DEPARTAMANETO
SELECT @QuantidadeFuncionario = COUNT(F.Pnome)
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D
ON D.Dnumero = F.Dnr
WHERE D.Dnumero = @Departamento;
SET @Erro1 = @@ERROR;

PRINT @QuantidadeFuncionario;

-- ATUALIZA O SALÁRIO
UPDATE FUNCIONARIO
SET Salario = Salario * 2
WHERE Dnr = @Departamento
SET @Erro1 = @Erro1 + @@ERROR;


-- SE HOUVER ERRO
IF @Erro1 <> 0 OR @@ROWCOUNT <> @QuantidadeFuncionario
		ROLLBACK TRANSACTION;
ELSE
		COMMIT TRANSACTION;

SELECT * FROM FUNCIONARIO
