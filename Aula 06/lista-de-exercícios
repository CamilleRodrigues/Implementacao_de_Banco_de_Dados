-- 1) Crie uma procedure que permita inserir uma nova categoria na tabela "Categoria"

CREATE PROCEDURE sp_novaCategoria
	@TipoCategoria VARCHAR(50)

AS
BEGIN

	IF EXISTS (SELECT 1 FROM CATEGORIA WHERE tipo_categoria = @TipoCategoria)
	BEGIN
		PRINT 'Categoria já cadastrado';
		RETURN;
	END

	ELSE	
	BEGIN
		INSERT INTO CATEGORIA (tipo_categoria)
		VALUES (@TipoCategoria);

		PRINT 'Nova categoria inserida';
	END
END

EXEC sp_novaCategoria @TipoCategoria = 'Terror';

SELECT * FROM CATEGORIA

-- 2) Crie uma procedure para atualizar os detalhes de um livro (por exemplo, título, ano) pelo ISBN

ALTER PROCEDURE sp_AtualizaDados
	@ISBN VARCHAR(20),
	@AtualizarTitulo VARCHAR(100),
	@AtualizarAno INT

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM LIVRO WHERE isbn = @ISBN)
	BEGIN
		PRINT 'Livro não encontrado';
		RETURN;
	END

	ELSE
	BEGIN
		UPDATE LIVRO
		SET titulo = @AtualizarTitulo,
			ano = @AtualizarAno
		WHERE isbn = @ISBN;
		PRINT 'Livro atualizado!';
	END
END

EXEC sp_AtualizaDados 
	 @ISBN = '9788577345670', 
	 @AtualizarTitulo = 'Garota Desdobrável', 
	 @AtualizarAno = 2015;

SELECT * 
FROM Livro 
WHERE isbn = '9788577345670';

-- 3) Desenvolva uma procedure para adicionar um novo autor à tabela "Autor"

CREATE PROCEDURE sp_novoAutor
	@Nome VARCHAR(100),
	@Nacionalidade VARCHAR(100)

AS
BEGIN
	IF EXISTS (SELECT 1 FROM AUTOR WHERE nome = @Nome AND nacionalidade = @Nacionalidade)
	BEGIN
		PRINT 'Autor já cadastrado!';
		RETURN;
	END

	ELSE
	BEGIN
		INSERT INTO AUTOR (nome, nacionalidade)
		VALUES (@Nome, @Nacionalidade);
		PRINT 'Novo autor cadastrado!';
	END
END

EXEC sp_novoAutor @Nome = 'Fiódor Dosoiévski', @Nacionalidade = 'Rússia';

SELECT * FROM AUTOR

-- 4) Implemente uma procedure para excluir um autor e remover sua associação com os livros na tabela "LivroAutor"

CREATE PROCEDURE sp_excluirAutor
	@IDautor INT

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM AUTOR WHERE id = @IDautor)
	BEGIN
		PRINT 'Autor não encontrado!';
		RETURN;
	END

	ELSE
	BEGIN
		DELETE FROM LivroAutor 
		WHERE fk_autor = @IDautor;

		DELETE FROM AUTOR 
		WHERE id = @IDautor;
		PRINT 'Autor removido!'
	END
END

EXEC sp_excluirAutor @IDautor = 1;

SELECT * FROM Autor;
SELECT * FROM LivroAutor;

-- 5) Crie uma procedure que receba o nome de uma categoria e retorne todos os livros dentro dessa categoria
ALTER PROCEDURE sp_LivroCategoria
	@IDCategoria VARCHAR(100)

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM CATEGORIA WHERE tipo_categoria = @IDCategoria)
	BEGIN
		PRINT 'Categoria não encontrada!';
	END

	ELSE
	BEGIN
		SELECT L.titulo, C.tipo_categoria
		FROM LIVRO AS L
		INNER JOIN CATEGORIA AS C
		ON L.fk_categoria = C.id
		WHERE C.tipo_categoria = @IDCategoria;
	END
END

EXEC sp_LivroCategoria @IDCategoria = 'Literatura Juvenil';

SELECT * FROM CATEGORIA;

-- 6) Desenvolva uma procedure que receba o nome de um autor e retorne todos os livros escritros por esse autor
ALTER PROCEDURE sp_AutordoLivro
	@NomeAutor VARCHAR(100)

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM AUTOR WHERE nome = @NomeAutor)
	BEGIN
		PRINT 'Livros não encontrados!';
	END

	ELSE
	BEGIN
		SELECT L.titulo AS 'Título do livro', A.nome AS 'Autor'
		FROM LIVRO AS L
		INNER JOIN LIVROAUTOR AS LA
			ON LA.fk_livro = L.isbn
		INNER JOIN AUTOR AS A
			ON LA.fk_autor = A.id
		WHERE A.nome = @NomeAutor;
	END
END

EXEC sp_AutordoLivro @NomeAutor = 'J.K. Rowling';

SELECT * FROM AUTOR

-- 7) Crie uma procedure que liste os livros publicados em um ano específico

CREATE OR ALTER PROCEDURE sp_AnoPublicacao
	@AnoPublicacao INT

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM Livro WHERE ano = @AnoPublicacao)
	BEGIN
		PRINT 'Livros não encontrados!';
	END

	ELSE
	BEGIN
		SELECT L.titulo AS 'Título do livro', L.ano AS 'Ano de publicação'
		FROM LIVRO AS L
		WHERE ano = @AnoPublicacao;
	END
END

EXEC sp_AnoPublicacao @AnoPublicacao = '2013';

SELECT * FROM LIVRO

-- 8) Implemente uma procedure para listar os livros publicados por uma editora específica

CREATE OR ALTER PROCEDURE sp_EditoraLivro
	@EditoraLivro VARCHAR(100)

AS
BEGIN 
	IF NOT EXISTS (SELECT 1 FROM EDITORA WHERE nome = @EditoraLivro)
	BEGIN
		PRINT 'Livros não encontrados!';
	END

	ELSE
	BEGIN
		SELECT L.titulo AS 'Título do livro', E.nome AS 'Editora'
		FROM LIVRO AS L
		INNER JOIN EDITORA AS E
			ON E.id = L.fk_editora
		WHERE nome = @EditoraLivro;
	END
END

EXEC sp_EditoraLivro @EditoraLivro = 'Rocco';

SELECT * FROM EDITORA

-- 9) Desenvolva uma procedure que retorne uma lista de livros com ISBNs dentro de uma faixa específica

CREATE OR ALTER PROCEDURE sp_FaixaISBN
	@ISBN_Inicial VARCHAR(50),
	@ISBN_Final VARCHAR(50)

AS
BEGIN 
	SELECT titulo, isbn
	FROM LIVRO 
	WHERE isbn BETWEEN @ISBN_Inicial AND @ISBN_Final
	ORDER BY isbn
END

EXEC sp_FaixaISBN '9788577343348', '9788582302026';

SELECT * FROM Livro

-- 10) Crie uma procedure para contar o número de livros em cada categoria

CREATE OR ALTER PROCEDURE sp_LivrosCategoria
AS
BEGIN
	SELECT C.tipo_categoria AS Categoria, COUNT(L.isbn) AS 'Quantidade de Livros'
	FROM Categoria AS C
	LEFT JOIN Livro AS L
		ON L.fk_categoria = C.id
	GROUP BY C.tipo_categoria
END

EXEC sp_LivrosCategoria;
